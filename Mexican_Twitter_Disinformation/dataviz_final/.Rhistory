plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#442ebf", "#24576D", "#099DD7",
"#58edcf", "#248E84", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#248E84", "#24576D", "#099DD7",
"#58edcf", "#44349e", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#248E84", "#24576D", "#099DD7",
"#44349e", "#58edcf", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#099DD7", "#24576D", "#248E84",
"#44349e", "#58edcf", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#099DD7", "#24576D", "#44349e",
"#248E84", "#58edcf", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#099DD7", "#44349e", "#24576D",
"#248E84", "#58edcf", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#099DD7", "#24576D",
"#248E84", "#58edcf", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#099DD7",
"#248E84", "#58edcf", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#248E84",
"#099DD7", "#58edcf", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#248E84",
"#58edcf", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#248E84",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#199446",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill", alpha = 0.7) +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#199446",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill", alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#199446",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
plot
#ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill", alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = "NYC Boroughs", y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#199446",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill", alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = NULL, y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months",
title = "AirBnB Listings in NYC Boroughs Monthly Availability")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#199446",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.title = element_text(size = 10),
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill", alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = NULL, y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months",
title = "Monthly Availability for AirBnB Listings in NYC Boroughs")+
guides(fill=guide_legend(title="Months Listed")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#199446",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.title = element_text(size = 10),
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
ggplotly(plot)
#pal_n = colorFactor(c("#ffe91f", "#f59d31", "#ff2424"),
#                 domain = abnb_nyc_perm$perm,ordered=FALSE)
#color_n = pal(abnb_nyc_perm$perm)
plot <- abnb_nyc %>%
ggplot( aes(x = neighbourhood_group, fill = as.factor(listing_months))) +
geom_histogram(stat = "count", position = "fill", alpha = 0.8) +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = NULL, y = "Percent of AirBnB Listings",
caption = "Days were rounded up for Months; Example- anything more than 11 months (11.1, 11.5, 11.9, etc.) included in 12 months",
title = "Monthly Availability for AirBnB Listings in NYC Boroughs")+
guides(fill=guide_legend(title="Months Available")) +
scale_fill_manual(values = c("#44349e", "#24576D", "#199446",
"#71e37f", "#099DD7", "#a183f2",
"#ff73f8", "#ffb4a8", "#e3e35b",
"#ff9b54", "#ff654d", "#d93f4a")) +
theme_minimal() +
theme(legend.justification = 0.05,
plot.title = element_text(size = 15),
plot.caption = element_text(size = 7),
panel.grid.minor.x =element_blank(),
panel.grid.major.x =element_blank())
ggplotly(plot)
abnb_nyc %>% groupby(listing_months) %>% summarise(sum(neighbourhood_group))
abnb_nyc %>% group_by(listing_months) %>% summarise(sum(neighbourhood_group))
abnb_nyc %>% group_by(listing_months)
abnb_nyc %>% group_by(as.factor(listing_months), neighborhood_groups) %>% summarise(n())
abnb_nyc %>% group_by(as.factor(listing_months), neighbourhood_groups) %>% summarise(n())
abnb_nyc %>% group_by(as.factor(listing_months), neighbourhood_group) %>% summarise(n())
knitr::opts_chunk$set(echo = TRUE)
frnd <- read.csv("krackht_friend.csv")
advice <- read.csv("krackht_advice.csv")
report <- read.csv("krackht_report.csv")
attr <- read.csv("krackht_attr.csv")
View(attr)
View(frnd)
frnd[,1]
colnames(frnd)
x <- as.matrix(frnd[,-1])
View(x)
x <- as.matrix(frnd)
View(x)
degree_x <- graph.adjacency(x, mode ="undirected", weighted = NULL)
net_attr$degree = igraph::degree(degree_x)
library(igraph)
library(ggplot2)
library(tidyr)
library(dplyr)
library(statnet)
options(digits=2)
degree_x <- graph.adjacency(x, mode ="undirected", weighted = NULL)
net_attr$degree = igraph::degree(degree_x)
degree_x <- graph.adjacency(x, mode ="undirected", weighted = NULL)
frnd$degree = igraph::degree(degree_x)
degree_x <- graph.adjacency(x, mode ="directed", weighted = NULL)
frnd$degree = igraph::degree(degree_x)
frnd_col <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21)
x <- as.matrix(frnd)
colnames(x) <- frnd_col
frnd_col <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21)
x <- as.matrix(frnd)
colnames(x) <- (1:21)
frnd_col <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21)
x <- as.matrix(frnd)
colnames(x) <- (1:21,)
colnames(x)
x <- as.matrix(frnd)
colnames(x)
frnd <- read.csv("krackht_friend.csv")
advice <- read.csv("krackht_advice.csv")
report <- read.csv("krackht_report.csv")
attr <- read.csv("krackht_attr.csv")
x <- as.matrix(frnd)
colnames(x)
colnames(x) <- (1:21)
frnd <- read.csv("krackht_friend.csv")
advice <- read.csv("krackht_advice.csv")
report <- read.csv("krackht_report.csv")
attr <- read.csv("krackht_attr.csv")
x <- as.matrix(frnd)
colnames(x) <- (1:21)
degree_x <- graph.adjacency(x, mode ="directed", weighted = NULL)
frnd$degree = igraph::degree(degree_x)
frnd <- read.csv("krackht_friend.csv")
advice <- read.csv("krackht_advice.csv")
report <- read.csv("krackht_report.csv")
attr <- read.csv("krackht_attr.csv")
colnames(frnd) <- (1:21)
colnames(advice) <- (1:21)
colnames(report) <- (1:21)
x <- as.matrix(frnd)
degree_x <- graph.adjacency(x, mode ="directed", weighted = NULL)
frnd$degree = igraph::degree(degree_x)
y <- as.matrix(advice)
degree_y <- graph.adjacency(y, mode ="directed", weighted = NULL)
advice$degree = igraph::degree(degree_y)
z <- as.matrix(report)
degree_z <- graph.adjacency(z, mode ="directed", weighted = NULL)
report$degree = igraph::degree(degree_z)
View(advice)
nrow(frnd)
V(x)
v(x)
gsize(x)
gsize(frnd)
igraph::gsize(degree_x)
sum(frnd$degree)
204/2
V(degree_x)
E(degree_x)
x <- as.matrix(frnd)
degree_x <- graph.adjacency(x, mode ="directed", weighted = NULL)
frnd <- read.csv("krackht_friend.csv")
advice <- read.csv("krackht_advice.csv")
report <- read.csv("krackht_report.csv")
attr <- read.csv("krackht_attr.csv")
colnames(frnd) <- (1:21)
x <- as.matrix(frnd)
degree_x <- graph.adjacency(x, mode ="directed", weighted = NULL)
frnd$degree = igraph::degree(degree_x)
frnd_edges <- E(degree_x)
frnd_vertices <- V(degree_x)
# Calculating density of the directed network
max_ties = nrow(frnd) * (nrow(frnd) - 1)
max_ties
# Calculating density of the directed network
max_ties = nrow(frnd) * (nrow(frnd) - 1)
density_frnd = frnd_edges / max_ties
density_frnd
nrow(frnd_edges)
frnd_edges
gsize(frnd_edges)
# Calculating density of the directed network
max_ties = nrow(frnd) * (nrow(frnd) - 1)
actual_ties = gsize(degree_x)
density_frnd = actual_ties/ max_ties
density_frnd
View(degree_x)
View(degree_x)
library(shiny); runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
install.packages("xaringan")
library(shiny); runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
install.packages("hrbrthemes")
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
install.packages("systemfonts")
install.packages("systemfonts")
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
library(shiny); runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
library(shiny); runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
wes_palette("Darjeeling1")
runApp('Desktop/Data Visualization/Group_M_MexicanDisinformation/dataviz_final/dataviz_final.R')
